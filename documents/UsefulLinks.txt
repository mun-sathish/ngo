Glide.with(getActivity()).asGif().load(R.raw.test_gif).into(headerLogo);
https://github.com/nzkozar/ExoplayerExample

ALL MATERIAL UI DEVELOPMENT LINK:
https://github.com/wasabeef/awesome-android-ui
https://github.com/wasabeef/awesome-android-libraries
https://github.com/JStumpp/awesome-android
https://infinum.co/the-capsized-eight/top-5-android-libraries-every-android-developer-should-know-about

About Developer Page:
https://github.com/jrvansuita/MaterialAbout

CoordinatorTabLayout:
https://github.com/hugeterry/CoordinatorTabLayout

Toast:
https://github.com/Muddz/StyleableToast

Rating Bar
https://github.com/ome450901/SimpleRatingBar

CheatSheet XML
https://drive.google.com/file/d/0B5XIkMkayHgRMVljUVIyZzNmQUU/view

Font Family ROBOTO
https://stackoverflow.com/questions/12128331/how-to-change-fontfamily-of-textview-in-android

SnackBar:
https://www.androidhive.info/2015/09/android-material-design-snackbar-example/

FAB
http://www.androidhive.info/2015/12/android-material-design-floating-action-button/

TABS
https://www.androidhive.info/2015/09/android-material-design-working-with-tabs/

Butter Knife: (easy code wrtiiing)
https://www.androidhive.info/2017/10/android-working-with-butterknife-viewbinding-library/

Bottom Dialog
https://www.androidhive.info/2017/12/android-working-with-bottom-navigation/

Settings Page
https://www.androidhive.info/2017/07/android-implementing-preferences-settings-screen/

Push Notification
https://www.androidhive.info/2015/06/android-push-notifications-using-parse-com/

Multi Language App:
https://www.androidhive.info/2014/07/android-building-multi-language-supported-app/

Check Internet Connection:
https://www.androidhive.info/2012/07/android-detect-internet-connection-status/

Downloading file with progress bar
https://www.androidhive.info/2012/04/android-downloading-file-by-showing-progress-bar/

Expansion Panel
https://github.com/florent37/ExpansionPanel

External FOnts:
https://www.androidhive.info/2012/02/android-using-external-fonts/

====================
RESOURCE DEVELOPMENT
====================

Glide for image
https://www.androidhive.info/2016/04/android-glide-image-library-building-image-gallery-app/

Volley
https://www.androidhive.info/2014/05/android-working-with-volley-library-1/

Audio Player
https://www.androidhive.info/2012/03/android-building-audio-player-tutorial/

For Video Player (Exo Player)
https://www.youtube.com/watch?v=mVJmOCb8Erw

https://github.com/rubensousa/PreviewSeekBar

=============
RECYCLER VIEW
==============

RecyclerView
http://www.androidhive.info/2016/01/android-working-with-recycler-view/

Recyclerview search
https://www.androidhive.info/2017/11/android-recyclerview-with-search-filter-functionality/

shimmer effect with recycler view
https://www.androidhive.info/2018/01/android-content-placeholder-animation-like-facebook-using-shimmer/

Gmail like view
https://www.androidhive.info/2017/02/android-creating-gmail-like-inbox-using-recyclerview/

Profile Screen:
https://www.androidhive.info/android-databinding-in-recyclerview-profile-screen/

CardView and Recycler View
https://www.androidhive.info/2016/05/android-working-with-card-view-and-recycler-view/

===========
PERMISSIONS
===========

EASY Permission using Dexter
https://www.androidhive.info/2017/12/android-easy-runtime-permissions-with-dexter/

MARSHMALLOW permissions
https://www.androidhive.info/2016/11/android-working-marshmallow-m-runtime-permissions/

========
LOCAL DB
========

Realm
https://www.androidhive.info/2016/05/android-working-with-realm-database-replacing-sqlite-core-data/

============
INTRO SCREEN
============

Slider
https://www.androidhive.info/2016/05/android-build-intro-slider-app/


==========
UTILITY
=======
Event bus for Android and Java that simplifies communication between Activities, Fragments, Threads, Services, etc. Less code, better quality

ObjectBox (GitHub) is a new superfast object-oriented database for mobile.

Essentials (GitHub) is a set of utility classes and hash functions for Android & Java projects.

greenDAO (GitHub) is an ORM optimized for Android: it maps database tables to Java objects and uses code generation for optimal speed.




/**
     * RecyclerView item decoration - give equal margin around grid item
     */
    public class GridSpacingItemDecoration extends RecyclerView.ItemDecoration {

        private int spanCount;
        private int spacing;
        private boolean includeEdge;

        public GridSpacingItemDecoration(int spanCount, int spacing, boolean includeEdge) {
            this.spanCount = spanCount;
            this.spacing = spacing;
            this.includeEdge = includeEdge;
        }

        @Override
        public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView.State state) {
            int position = parent.getChildAdapterPosition(view); // item position
            int column = position % spanCount; // item column

            if (includeEdge) {
                outRect.left = spacing - column * spacing / spanCount; // spacing - column * ((1f / spanCount) * spacing)
                outRect.right = (column + 1) * spacing / spanCount; // (column + 1) * ((1f / spanCount) * spacing)

                if (position < spanCount) { // top edge
                    outRect.top = spacing;
                }
                outRect.bottom = spacing; // item bottom
            } else {
                outRect.left = column * spacing / spanCount; // column * ((1f / spanCount) * spacing)
                outRect.right = spacing - (column + 1) * spacing / spanCount; // spacing - (column + 1) * ((1f /    spanCount) * spacing)
                if (position >= spanCount) {
                    outRect.top = spacing; // item top
                }
            }
        }
    }


}